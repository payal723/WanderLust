<% layout('layouts/boilerplate') %>

    <h3>Create New Listing</h3>

    <form action="/listings" method="POST" novalidate class="needs-validation" enctype="multipart/form-data">
        <div class="mb-3">
            <label for="title" class="form-label">Title</label>
            <input type="text" class="form-control" id="title" name="listing[title]" required>
            <div class="valid-feedback">Title Looks Good!</div>
        </div>

        <div class="mb-3">
            <label for="description" class="form-label">Description</label>
            <textarea class="form-control" id="description" name="listing[description]" rows="3" required></textarea>
            <div class="invalid-feedback">Please enter the discription</div>
        </div>


        <div class="mb-3">
            <label for="images" class="form-label">Upload Images (Max 5)</label>
            <input type="file" class="form-control" id="images" name="listing[images]" multiple accept="image/*,.avif,.webp" onchange="previewImages(this)">
            <div class="form-text">Select up to 5 images for your listing</div>
            <div id="imagePreview" class="image-preview-container mt-3"></div>
        </div>

        <div class="mb-3">
            <label for="price" class="form-label">Price</label>
            <input class="form-control" id="price" name="listing[price]" required>
            <div class="invalid-feedback">Price should be valid!</div>
        </div>

        <div class="mb-3">
            <label for="location" class="form-label">Location</label>
            <input type="text" class="form-control" id="location" name="listing[location]" required>
            <div class="invalid-feedback">Location should be valid</div>
        </div>

        <div class="mb-3">
            <label for="country" class="form-label">Country</label>
            <input type="text" class="form-control" id="country" name="listing[country]" required>
            <div class="invalid-feedback">Country name should be valid</div>
        </div>
     

<button type="submit" class="btn btn-success">ADD</button>
</form>

        <button type="submit" class="btn btn-success">ADD</button>
    </form>

<style>
.image-preview-container {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    gap: 10px;
    max-height: 300px;
    overflow-y: auto;
}

.preview-item {
    position: relative;
    border-radius: 8px;
    overflow: hidden;
    aspect-ratio: 1;
}

.preview-item img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.remove-btn {
    position: absolute;
    top: 5px;
    right: 5px;
    background: rgba(255, 255, 255, 0.9);
    border: none;
    border-radius: 50%;
    width: 25px;
    height: 25px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 12px;
    color: #dc3545;
}

.remove-btn:hover {
    background: white;
}
</style>

<script>
function previewImages(input) {
    const previewContainer = document.getElementById('imagePreview');
    previewContainer.innerHTML = '';
    
    if (input.files && input.files.length > 0) {
        if (input.files.length > 5) {
            alert('Maximum 5 images allowed');
            input.value = '';
            return;
        }
        
        Array.from(input.files).forEach((file, index) => {
            const reader = new FileReader();
            reader.onload = function(e) {
                const previewItem = document.createElement('div');
                previewItem.className = 'preview-item';
                previewItem.innerHTML = `
                    <img src="${e.target.result}" alt="Preview ${index + 1}">
                    <button type="button" class="remove-btn" onclick="removeImage(${index})">&times;</button>
                `;
                previewContainer.appendChild(previewItem);
            };
            reader.readAsDataURL(file);
        });
    }
}

function removeImage(index) {
    const input = document.getElementById('images');
    const dt = new DataTransfer();
    
    Array.from(input.files).forEach((file, i) => {
        if (i !== index) {
            dt.items.add(file);
        }
    });
    
    input.files = dt.files;
    previewImages(input);
}
</script>